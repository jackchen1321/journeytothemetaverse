{"version":3,"file":"static/js/921.45b6cd77.chunk.js","mappings":"0MAQMA,EAAKC,IAAAA,S,SAEKC,EAAcC,GAI5B,MAEEC,EADF,kBAAWD,EACCE,EAAAA,KAAAA,EAAVD,OAEAA,EAIF,IAAME,EAAI,IAAIC,WAAd,IACMC,EAAI,CAACR,EAAD,KAASA,EAAT,KAAiBA,EAAjB,KAAyBA,EAAnC,MACMS,EAAK,IAAIF,WAAW,GAAf,eAAmB,IAAIA,WAAR,KAAf,OAA+C,IAAIA,WAA9D,OACMG,EAAK,IAAIH,WAAf,IACAP,EAAAA,YAAAA,EAAAA,EAAAA,IAEAM,EAAAA,IAAAA,IAEAA,EAAAA,KAAAA,IAEAA,EAAAA,KAAAA,GACAN,EAAAA,WAAAA,EAAAA,GACAA,EAAAA,KAAAA,EAAAA,GACA,IAAK,IAAIW,EAAT,EAAgBA,EAAhB,GAAwBA,GAAxB,EAAgCF,EAAGE,EAAHF,IAAaC,EAAbD,GAEhC,MAAO,CAAEA,GAAIJ,EAAAA,KAAN,GAAuBK,GAAIL,EAAAA,KAAAA,M","sources":["../node_modules/@toruslabs/openlogin-ed25519/src/utils.ts"],"sourcesContent":["import nacl from \"@toruslabs/tweetnacl-js\";\n\nexport type SECP256K1KeyType = \"secp256k1\";\nexport type ED25519KeyType = \"ed25519\";\n\nexport type SECP256K1Key = Buffer;\nexport type ED25519Key = Buffer;\n\nconst l = (nacl as any).lowlevel;\n\nexport function getED25519Key(privateKey: string | Buffer): {\n  sk: Buffer;\n  pk: Buffer;\n} {\n  let privKey: Buffer;\n  if (typeof privateKey === \"string\") {\n    privKey = Buffer.from(privateKey, \"hex\");\n  } else {\n    privKey = privateKey;\n  }\n  // Implementation copied from tweetnacl\n\n  const d = new Uint8Array(64);\n  const p = [l.gf(), l.gf(), l.gf(), l.gf()];\n  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);\n  const pk = new Uint8Array(32);\n  l.crypto_hash(d, sk, 32);\n\n  d[0] &= 248;\n\n  d[31] &= 127;\n\n  d[31] |= 64;\n  l.scalarbase(p, d);\n  l.pack(pk, p);\n  for (let i = 0; i < 32; i += 1) sk[i + 32] = pk[i];\n\n  return { sk: Buffer.from(sk), pk: Buffer.from(pk) };\n}\n"],"names":["l","nacl","getED25519Key","privateKey","privKey","Buffer","d","Uint8Array","p","sk","pk","i"],"sourceRoot":""}